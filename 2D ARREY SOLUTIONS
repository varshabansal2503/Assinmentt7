ANS-1:
Given a square matrix mat, return the sum of the matrix diagonals.
import java.util.*;
class Solution
 {
    public static int diagonalSum(int[][] mat)
     {
       int sum=0;
       int n=mat.length;
        int m=mat[0].length;
        
        for(int i=0;i<n;i++)
        {
            sum=sum+mat[i][i];
            if(i!=n-1-i)
            {
                sum+=mat[i][n-1-i];
            }
            
            
        }
        return sum;
    }
    public static void main(String args[])
    {
        int mat[][]=new int[3][3];
        int n=mat.length;
        int m=mat[0].length;
        Scanner sc=new Scanner(System.in);
    
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                mat[i][j]=sc.nextInt();
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
              System.out.print(  mat[i][j]+" ");
            }
            System.out.println();
        }
        System.out.println( diagonalSum(mat));
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------
ANS:2-You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise
import java.util.*;
public class Solution
 {
    public static int diagonalSum(int[][] matrix)
     {
        int n=matrix.length;
        int m=matrix[0].length;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int temp=matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;
            }
        }
          int col1 = 0;
           int col2 = matrix.length-1;
    while (col1<col2)
    {
        for (int i = 0; i < matrix.length; i++) {
            int temp = matrix[i][col1];
            matrix[i][col1] = matrix[i][col2];
            matrix[i][col2] = temp;
        }
        col1++;
        col2--;
    }
        
    }
    public static void main(String args[])
    {
        int matrix[][]=new int[3][3];
        int n=matrix.length;
        int m=matrix[0].length;
        Scanner sc=new Scanner(System.in);
    
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                matrix[i][j]=sc.nextInt();
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
              System.out.print(  matrix[i][j]+" ");
            }
            System.out.println();
        }
        System.out.println( diagonalSum(matrix));
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS-3:-- 
Given a 2D integer array matrix, return the transpose of matrix.
class Solution 
{
    public static int[][] transpose(int[][] matrix)
     {
         
     int[][] ans = new int[matrix[0].length][matrix.length];

        for(int i = 0; i<matrix.length;i++)
        {
            for(int j =0; j< matrix[i].length; j++ )
            {
                ans[j][i] = matrix[i][j];
            }
        }
        return ans;
    }
    public static void main(String args[])
    {
        int matrix[][]=new int[3][3];
        int n=matrix.length;
        int m=matrix[0].length;
        Scanner sc=new Scanner(System.in);
    
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                matrix[i][j]=sc.nextInt();
            }
        }
         
       
        System.out.println(  transpose( matrix));
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS:4--Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's


---------------------------------------------------------------------------------------------------------------------------------------------------------------
ANS:5-You are given two matrices A & B of same size, you have to return another matrix which is the sum of A and B.Note:
Matrices are of same size means the number of rows and number of columns of both matrices are equal.
import java.util.*;
public class Additionmat
{
    public static int[][]additon_arr(int mat1[][],int mat2[][])
    {
           int mat3[][]=new int[3][3];
            for(int i=0;i<mat3.length;i++)
          {
            for(int j=0;j<mat3[0].length;j++)
            {
                mat3[i][j]=(mat1[i][j]+mat2[i][j]);
            }
            System.out.println();
          }
          return mat3;
    }
    public static void print_matrix(int mat3[][])
    {
         for (int i = 0; i < mat3.length; i++) {
            for (int j = 0; j < mat3[0].length; j++)
                System.out.print(mat3[i][j] + " ");
 
            System.out.println();
        }
    }
    public static void main(String args[])
    {
        Scanner sc =new Scanner(System.in);
        
        int mat1[][]=new int[3][3];
         int mat2[][]=new int[3][3];
          
            System.out.println("entre elemt");
          for(int i=0;i<mat1.length;i++)
          {
            for(int j=0;j<mat1[0].length;j++)
            {
                mat1[i][j]=sc.nextInt();
               
            }
            System.out.println();
          }
            System.out.println("entre elemt");
           for(int i=0;i<mat2.length;i++)
          {
            for(int j=0;j<mat2[0].length;j++)
            {
                mat2[i][j]=sc.nextInt();
                
            }
            System.out.println();
          }
              int mat3[][] = additon_arr( mat1,mat2);
 
            print_matrix(mat3);
          

    }
}
